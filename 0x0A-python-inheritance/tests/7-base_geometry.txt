The ``BaseGeometry`` class
==========================

Using ``BaseGeometry``
----------------------

Check Class Type:
    >>> bg = BaseGeometry()
    >>> isinstance(bg, BaseGeometry)
    True

area() Method
-------------
Area method is an instance method:
    >>> isinstance(BaseGeometry.__dict__['area'], function)
    True

Area method called with no arguments:
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

integer_validator() Method
--------------------------
Integer_validator is an instance method:
    >>> isinstance(BaseGeometry.__dict__['integer_validator'], function)
    True

Integer_validator called with no arguments:
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Integer_validator called with valid arguments:
    >>> bg.integer_validator("key", 98)
    
Integer_validator called with zero value:
    >>> bg.integer_validator("key", 0)
    Traceback (most recent call last):
    ValueError: key must be greater than 0

Integer_validator called with negative value:
    >>> bg.integer_validator("key", -1000)
    Traceback (most recent call last):
    ValueError: key must be greater than 0
